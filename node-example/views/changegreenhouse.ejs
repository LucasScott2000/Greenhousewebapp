<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Meta tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Greenhouse Environment</title>
    <link rel="icon" type="image/png" href="https://github.com/LucasScott2000/Greenhousewebapp/raw/greenhouse-website/node-example/logo.png">
    <!-- CSS stylesheets -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <style>
        /* Inline CSS styles */
        body {
            background-color: lightblue;
        }
        .container {
            padding-top: 20px; /* Add some padding to center the content */
        }
        /* Styles for profile boxes */
        .profile-box {
            padding: 20px;
            margin-bottom: 20px;
            background-color: white;
            border-radius: 5px;
        }
        /* New styles for white boxes behind parameter options */
        .parameter-box {
            padding: 10px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add shadow for depth */
            margin-bottom: 20px;
        }
        /* Style for the save button */
        .save-button {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <!-- Navigation bar -->
    <nav class="green lighten-1">
        <div class="nav-wrapper">
            <a href="#" class="brand-logo center">Change Greenhouse Environment</a>
            <ul id="nav-mobile" class="left hide-on-med-and-down">
                <li><a href="/login">Logout</a></li>
                <li><a href="/menu"> Home Menu</a></li>
            </ul>
        </div>
    </nav>
    <!-- Main content container -->
    <div class="container">
        <!-- Dropdown Trigger -->
        <a class='dropdown-trigger btn' href='#' data-target='dropdown1'>Modification Options</a>

        <!-- Dropdown Structure -->
        <ul id='dropdown1' class='dropdown-content'>
            <li><a href="#!" onclick="showManualParameters()">Manually Change Parameters</a></li>
            <li><a href="#!" onclick="showEnvironmentProfile()">Select Environment Profile</a></li>
        </ul>

        <!-- Content Divs -->
        <div id="manualParameters" style="display: none;">
            <!-- Content for Manually Change Parameters -->
            <h4>Manually Change Parameters</h4>
            <div class="row">
                <!-- Input fields for air temperature, humidity, and air pressure -->
                <div class="col s12 m4">
                    <div class="parameter-box">
                        <h5>Air Temperature</h5>
                        <!-- Input field for air temperature -->
                        <input type="number" id="airTemperature" placeholder="Desired Air Temperature" oninput="showSaveButton()">
                    </div>
                </div>
                <div class="col s12 m4">
                    <div class="parameter-box">
                        <h5>Humidity</h5>
                        <!-- Input field for humidity -->
                        <input type="number" id="humidity" placeholder="Desired Humidity" oninput="showSaveButton()">
                    </div>
                </div>
                <div class="col s12 m4">
                    <div class="parameter-box">
                        <h5>Air Pressure</h5>
                        <!-- Input field for air pressure -->
                        <input type="number" id="airPressure" placeholder="Desired Air Pressure" oninput="showSaveButton()">
                    </div>
                </div>
            </div>
            <!-- Save button -->
            <button id="saveButton" class="btn green save-button" onclick="saveChangesManually()" style="display: none;">Save Environmental Changes</button>
        </div>

        <div id="environmentProfile" style="display: none;">
            <!-- Content for selecting environment profile -->
            <h4>Select Environment Profile</h4>
            <select id="environmentProfileSelect" onchange="selectEnvironmentProfile()">
                <!-- Options will be dynamically added here -->
                <option value="6609bfcbd7f853a33ae43890">Tomato</option>
                <option value="662246000da40eabd6ea3c43">Strawberry</option>
                <option value="6622474b0da40eabd6ea3c44">Potato</option>
                <option value="662247a60da40eabd6ea3c46">Blueberry</option>
                <option value="662247630da40eabd6ea3c45">Onion</option>
            </select>
            <!-- Save button -->
            <button id="saveButtonSelect" class="btn green save-button" onclick="saveChangesProfile()" style="display: none;">Save Environmental Changes</button>
        </div>

        <!-- Profile details -->
        <div id="profileDetails"></div>
    </div>

    <!-- JavaScript scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script>
        // Define plantProfiles globally
        let plantProfiles;

        // This function runs when the DOM content is loaded
        document.addEventListener('DOMContentLoaded', function() {
            var elems = document.querySelectorAll('.dropdown-trigger');
            var instances = M.Dropdown.init(elems, {});
            fetchPlantProfiles();
        });

        async function fetchPlantProfiles() {
            try {
                const response = await fetch('http://localhost:3000/getplantprofile');
                plantProfiles = await response.json();
                displayPlantProfiles(plantProfiles);
            } catch (error) {
                console.error('Error fetching plant profiles:', error);
            }
        }

        function displayPlantProfiles(plantProfiles) {
            const selectElement = document.getElementById("environmentProfileSelect");
            // Clear existing options
            selectElement.innerHTML = '';
            
            // Add a default option
            const defaultOption = document.createElement("option");
            defaultOption.text = "Select a Profile";
            defaultOption.disabled = true;
            defaultOption.selected = true;
            selectElement.appendChild(defaultOption);
            
            // Add options for each plant profile
            plantProfiles.forEach(profile => {
                const option = document.createElement("option");
                option.value = profile._id;
                option.text = profile.name;
                selectElement.appendChild(option);
            });

            // Initialize Materialize select dropdown
            M.FormSelect.init(selectElement);
        }

        function selectEnvironmentProfile() {
            const selectElement = document.getElementById("environmentProfileSelect");
            const selectedProfileId = selectElement.value;

            // Find the selected profile in the fetched plant profiles
            const selectedProfile = plantProfiles.find(profile => profile._id === selectedProfileId);

            // Display the details of the selected profile
            displayProfileDetails(selectedProfile);

            // Show the save button
            document.getElementById("saveButton").style.display = "none";
            document.getElementById("saveButtonSelect").style.display = "block";
        }

        function displayProfileDetails(profile) {
            // Update the HTML to display the profile details
            const profileDetailsElement = document.getElementById("profileDetails");
            profileDetailsElement.innerHTML = `
                <h4>${profile.name}</h4>
                <p><strong>Scientific Name:</strong> ${profile.scientific_name}</p>
                <p><strong>Description:</strong> ${profile.description}</p>
                <h5>Growth Stages</h5>
                <ul>
                    ${profile.growth_stages.map(stage => `<li><strong>${stage.stage}:</strong> ${stage.description}</li>`).join('')}
                </ul>
                <h5>Environmental Requirements</h5>
                <p><strong>Air Temperature:</strong> ${profile.environmental_requirements.airTemp.min}-${profile.environmental_requirements.airTemp.max} ${profile.environmental_requirements.airTemp.unit}</p>
                <p><strong>Humidity:</strong> ${profile.environmental_requirements.humidity.min}-${profile.environmental_requirements.humidity.max} ${profile.environmental_requirements.humidity.unit}</p>
                <p><strong>Air Pressure:</strong> ${profile.environmental_requirements.airPress.min}-${profile.environmental_requirements.airPress.max} ${profile.environmental_requirements.airPress.unit}</p>
                <p><strong>Light:</strong> ${profile.environmental_requirements.light}</p>
            `;
        }

        function saveChangesManually() {
            // Retrieve the manually entered parameters
            const airTemperature = document.getElementById("airTemperature").value;
            const humidity = document.getElementById("humidity").value;
            const airPressure = document.getElementById("airPressure").value;

            // Implement logic to update actuators based on the input values
            updateActuators(airTemperature, humidity, airPressure);
        }

        async function updateActuators(airTemperature, humidity, airPressure) {
    try {
        let coolingState = "Off";
        let heatingState = "Off";
        let ventilationState = "Off";

        // Example logic: If air temperature is above 25°C, turn on cooling and turn off heating
        if (parseFloat(airTemperature) > 25) {
            coolingState = "On";
            heatingState = "Off";

        } else {
            // If air temperature is below or equal to 25°C, turn on heating and turn off cooling
            coolingState = "Off";
            heatingState = "On";
        }

        // Example logic: If humidity is above 50%, turn on ventilation
        if (parseFloat(humidity) > 50) {
            ventilationState = "On";
        }

        // Update the states of different actuators in the GHMS.Actuators database
        await fetch('http://localhost:3000/updateactuator/Cooling System', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ state: coolingState })
        });

        await fetch('http://localhost:3000/updateactuator/Heating System', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ state: heatingState })
        });

        await fetch('http://localhost:3000/updateactuator/Natural Ventilation ', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ state: ventilationState })
        });

        console.log('Actuators updated successfully.');
    } catch (error) {
        console.error('Error updating actuators:', error);
    }
}


        function saveChangesProfile() {
            // Implement saving changes for profile selection here
            alert("Changes saved successfully!");
        }

        function showManualParameters() {
            document.getElementById("manualParameters").style.display = "block";
            document.getElementById("environmentProfile").style.display = "none";
            // Clear profile details when switching to manual parameters
            document.getElementById("profileDetails").innerHTML = "";
            // Hide the save button
            document.getElementById("saveButtonSelect").style.display = "none";
            document.getElementById("saveButton").style.display = "none";
        }

        function showEnvironmentProfile() {
            document.getElementById("manualParameters").style.display = "none";
            document.getElementById("environmentProfile").style.display = "block";
            // Clear profile details when switching to environment profile selection
            document.getElementById("profileDetails").innerHTML = "";
            // Hide the save button
            document.getElementById("saveButtonSelect").style.display = "none";
            document.getElementById("saveButton").style.display = "none";
        }

        function showSaveButton() {
            // Show the save button
            document.getElementById("saveButton").style.display = "block";
        }
    </script>
</body>
</html>
