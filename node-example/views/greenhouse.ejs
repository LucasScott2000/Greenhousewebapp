<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Set character encoding -->
    <meta charset="UTF-8">
    <!-- Set favicon -->
    <link rel="icon" type="image/png" href="https://github.com/LucasScott2000/Greenhousewebapp/raw/greenhouse-website/node-example/logo.png">
    <!-- Set viewport for responsiveness -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Set page title -->
    <title>Greenhouse Data and Status</title>
    <!-- Link to Materialize CSS framework -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <!-- Internal styling -->
    <style>
        body {
            background-color: lightblue; /* Set background color */
        }
    </style>
</head>
<body>
    <!-- Navigation bar -->
    <nav class="green lighten-1">
        <div class="nav-wrapper">
          <a href="#" class="brand-logo center">Current Greenhouse Data and Status</a>
          <ul id="nav-mobile" class="left hide-on-med-and-down">
            <li><a href="/login">Logout</a></li> <!-- Logout link -->
            <li><a href="/menu"> Home Menu</a></li> <!-- Home menu link -->
          </ul>
        </div>
    </nav>
    <br>
    <div class="container">
        <!-- Sensors section -->
        <h2>Sensors</h2>
        <div class="row">
            <!-- Display sensor data -->
            {% for sensor in sensors %}
            
            <div class="col s4" >
                
                <div class="card-panel green lighten-3" id="{{ sensor.sensor_type }}">
                    Sensor: 
                    {% if sensor.sensor_type == "airTemp" %}
                        Air Temperature (째C)
                    {% elif sensor.sensor_type == "humidity" %}
                        Humidity (%)
                    {% elif sensor.sensor_type == "airPress" %}
                        Air Pressure (hPa)
                    {% endif %}
                    <br>Current Value: {{ sensor.value }} <!-- Display sensor value -->
                    {% if sensor.sensor_type == "airTemp" %}
                        째C
                    {% elif sensor.sensor_type == "humidity" %}
                        %
                    {% elif sensor.sensor_type == "airPress" %}
                        hPa
                    {% endif %}
                    <br>Timestamp: {{ sensor.timestamp }} <!-- Display sensor timestamp -->
                </div>

            </div>
            {% endfor %}
        </div> 
        <!-- Actuators section -->
        <h2>Actuators</h2>
        <div class="row" id="actuators">
            <!-- Display actuator data -->
            {% for actuator in actuators %}
            
            <div class="col s4" >
                
                <div class="card-panel green lighten-3" id="{{ actuator.actuator_name }}">
                   Actuator: {{actuator.actuator_name}} <!-- Display actuator name -->
                    <br>
                   State: {{actuator.state}} <!-- Display actuator state -->
                </div>

            </div>
            {% endfor %}
        </div> 
    </div>

    <!-- Link to Materialize JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>  

    <!-- JavaScript for updating sensor and actuator values -->
    <script>
        // Function to update sensor and actuator values
        function updateValues() {
            // Creating Our XMLHttpRequest object 
            let xhr = new XMLHttpRequest();

            // Making the connection  
            let url = 'http://localhost:3000/getsensordata';
            xhr.open("GET", url, true);

            // Function execute after request is successful 
            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    const jsonResponse = JSON.parse(this.responseText);
                    jsonResponse.forEach(sensor => {
                        // Get the sensor type and value 
                        const sensorType = sensor.sensor_type;
                        const sensorValue = sensor.value;

                        // Format the timestamp
                        const timestamp = new Date(sensor.timestamp);
                        const formattedTimestamp = timestamp.toLocaleString();

                        // Update the HTML content of the sensor's div with the new value and formatted timestamp
                        const sensorDiv = document.getElementById(sensorType);
                        if (sensorDiv) {
                            sensorDiv.innerHTML = `Sensor: 
                                ${sensorType == "airTemp" ? "Air Temperature (째C)" : 
                                sensorType == "humidity" ? "Humidity (%)" : 
                                sensorType == "airPress" ? "Air Pressure (hPa)" : sensorType}
                                <br>Current Value: ${sensorValue}
                                {% if sensor.sensor_type == "airTemp" %}
                                    째C
                                {% elif sensor.sensor_type == "humidity" %}
                                    %
                                {% elif sensor.sensor_type == "airPress" %}
                                    hPa
                                {% endif %}
                                <br>Timestamp: ${formattedTimestamp}`;
                        }
                    });
                }
            }
            // Sending our request 
            xhr.send();

            // Fetch actuator data
            let xhrActuators = new XMLHttpRequest();
            let urlActuators = 'http://localhost:3000/getactuators';
            xhrActuators.open("GET", urlActuators, true);
            xhrActuators.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    const actuatorData = JSON.parse(this.responseText);
                    const actuatorsDiv = document.getElementById('actuators');
                    actuatorsDiv.innerHTML = ''; // Clear previous data
                    const displayedActuators = new Set(); // To keep track of displayed actuators
                    actuatorData.forEach(actuator => {
                        const actuatorName = actuator.actuator_name;
                        if (!displayedActuators.has(actuatorName)) { // Check if actuator already displayed
                            const actuatorState = actuator.state;
                            const actuatorCard = document.createElement('div');
                            actuatorCard.className = 'col s4';
                            actuatorCard.innerHTML = `
                                <div class="card-panel green lighten-3">
                                    Actuator: ${actuatorName}<br>
                                    State: ${actuatorState}
                                </div>`;
                            actuatorsDiv.appendChild(actuatorCard);
                            displayedActuators.add(actuatorName); // Add to displayed set
                        }
                    });
                }
            }
            xhrActuators.send();
        }
        // Update values every 10 seconds
        setInterval(updateValues, 10000);
    </script>
</body>
</html>
